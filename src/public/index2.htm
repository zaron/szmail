<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>szMail</title>
<link rel="stylesheet" href="css/layout2.css" />

<script type="text/javascript" src="lib/yabble.js"></script>
<script type="text/javascript" src="lib/jquery.js"></script>
<script type="text/javascript" src="lib/jquery.tmpl.js"></script>
<script type="text/javascript" src="folders.js"></script>
<script type="text/javascript" src="mails.js"></script>


<script type="text/javascript" src="navigator.js"></script>

<script type="text/javascript">
function loadTemplate (id, url) {
	// TODO: store which templates are already loaded and compiled then decide about loading.
	var data = $.ajax({ type: "GET", url: url, async: false }).responseText;
	return $.template(id, data);
};

var templates = {};
function insertTemplateSet(set) {
	for (var id in set.templates) {
		if(templates[set.templates[id]]) continue;
		templates[set.templates[id]] = loadTemplate(set.templates[id],'tpl/' + set.templates[id] + '.tpl');
	};
	set.insert(templates[set.templates[0]]);
};

function View (options) {
	var loaded = false;
	var anchor = null;
	var placeholders = {};
	
	this.show = function () {
		if(loaded) {
			anchor.show();

		} else {
			insertTemplateSet({
				templates : options.templates,
				insert    : function (tmpl) {
					anchor = options.insert(tmpl);
					anchor.hide();
					anchor.show();
					loaded = true;
				}
			});
		}
		for(var id in placeholders) {
			placeholders[id].show();
		}
	};
	
	this.hide = function () {
		if(!loaded) {
			alert('View not loaded yet!?');
			return;
		}
		anchor.hide();
	};
	
	this.setPlaceholder = function (name, placeholder) {
		if(placeholders[name] && placeholders[name] != placeholder) placeholders[name].hide();
		placeholders[name] = placeholder;
	};
};

/* Perspectives */
var TwoColumnsPerspective = new View({
	templates : ['base/layout','base/header','base/aside','base/content','base/footer','base/universalbar','base/accounts'],
	insert    : function (tmpl) {
		var anchor = $.tmpl(tmpl).appendTo($('body')) 
		$(".dropdown dt").click(function() {
			$(".dropdown dt").css("-moz-border-radius","3px 3px 0 0");
		    $(".dropdown dd ul").toggle();
		});
		return anchor;
	}
});

/* Views */
var SettingsSidebarView = new View({
	templates : ['settings/sidebar'],
	insert    : function (tmpl) {
		return $.tmpl(tmpl).appendTo($('#aside'))
	}
});

var MailboxSidebarView = new View({
	templates : ['mail/sidebar'],
	insert    : function (tmpl) {
		return $.tmpl(tmpl).appendTo($('#aside'))
	}
});

var MailboxView = new View({
	templates : ['mail/folder/content'],
	insert    : function (tmpl) {
		return $.tmpl(tmpl).appendTo($('#content'))
	}
});

var SettingsAccountView = new View({
	templates : ['settings/account/content'],
	insert    : function (tmpl) {
		return $.tmpl(tmpl).appendTo($('#content'))
	}
});

var SettingsAccountIdentityView = new View({
	templates : ['settings/account/identity'],
	insert    : function (tmpl) {
		return $.tmpl(tmpl).appendTo($('#account div.content'))
	}
});

var SettingsAccountServersView = new View({
	templates : ['settings/account/servers'],
	insert    : function (tmpl) {
		return $.tmpl(tmpl).appendTo($('#account div.content'))
	}
});

var EmptyView = {
	show : function(){},
	hide : function(){}
};

/* Pages */
var SettingsPage = {
	name : 'settings',
	show : function() {
		TwoColumnsPerspective.setPlaceholder('aside',SettingsSidebarView);
		SettingsAccountView.setPlaceholder('content',EmptyView);
		TwoColumnsPerspective.setPlaceholder('content',SettingsAccountView);
		TwoColumnsPerspective.show();
		$('div.settings.nav').hide();
	}
};

var MailboxPage = {
		name : 'mailbox',
		show : function() {
			TwoColumnsPerspective.setPlaceholder('aside',MailboxSidebarView);
			MailboxView.setPlaceholder('content',EmptyView);
			TwoColumnsPerspective.setPlaceholder('content',MailboxView);
			TwoColumnsPerspective.show();
			$('div.settings.nav').hide();
		}
	};

var SettingsAccountPage = {
	name : 'settings/account',
	show : function() {
		TwoColumnsPerspective.setPlaceholder('aside',SettingsSidebarView);
		SettingsAccountView.setPlaceholder('content',SettingsAccountIdentityView);	
		TwoColumnsPerspective.setPlaceholder('content',SettingsAccountView);
		TwoColumnsPerspective.show();
		$('div.settings.nav').show();
	}
};



$(function () {
	
	Navigator.registerPage(SettingsPage);
	Navigator.registerPage(SettingsAccountPage);
	Navigator.registerPage(MailboxPage);
	
	$(window).bind('hashchange', function(event) {
		Navigator.update();
	});

	$(window).trigger('hashchange');
	
});


</script>
</head>
<body></body>
</html>